# Домашнее задание по теме "Обзор сторонних библиотек Python"
# Задание: Обзор сторонних библиотек Python
#
# Цель:
# Познакомиться с использованием сторонних библиотек в Python и применить их в различных задачах.
#
# Инструкции:
# 1. Выберите одну или несколько сторонних библиотек Python, например, requests, pandas, numpy, matplotlib, pillow и другие.
# 2. Изучите документацию выбранных библиотек, ознакомьтесь с их основными возможностями и функциями.
# 3. Напишите простые задачи, в которых нужно использовать выбранные библиотеки, и выполните их. Приведите примеры использования библиотек в различных сценариях:
#   - Запросить данные с помощью библиотеки requests из API и вывести их в консоль.
#   - Считать данные из файла с помощью библиотеки pandas, выполнить простой анализ данных и вывести результаты.
#   - Создать массив чисел с помощью библиотеки numpy, выполнить математические операции с массивом и вывести результаты.
#   - Визуализировать данные с помощью библиотеки matplotlib.
#   - Обработать изображение с помощью библиотеки pillow, например, изменить его размер, применить эффекты и сохранить в другой формат.
# 4. Поясните, как выбранные библиотеки помогли в решении поставленных задач и какие преимущества они предоставили по сравнению с базовым функционалом Python.
#
# Рекомендации:
# - Используйте документацию и примеры кода из официальных ресурсов выбранных библиотек.
# - Экспериментируйте с разными параметрами и функциями в выбранных библиотеках, чтобы лучше понять их возможности.
# - Делайте выводы о преимуществах и удобстве использования сторонних библиотек в различных задачах.
#
# Оценка:
# Оценивайте выполнение задания по следующим критериям:
# - Верное использование выбранных сторонних библиотек Python.
# - Корректная работа и отображение результатов в соответствии с задачами.
# - Качество и полнота выполнения задания.

import requests
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image, ImageFilter


class Requests:
    print('-----------------------------------------------------------------------')
    url = 'https://tinkoff.ru'  # Указываем URL, на который будем отправлять GET-запрос

    response = requests.get(url)  # Отправляем GET-запрос по указанному URL

    if response.status_code == 200:  # Проверяем статус-код ответа

        data = response.url  # Если статус-код 200 (OK), получаем данные из ответа
        print(f'Статус ответа: OK [код 200]')

    else:
        print('Ошибка при выполнении запроса')  # В случае ошибки выводим сообщение

print('-----------------------------------------------------------------------')

class Panda:
    # Загрузка данных из текстового файла
    data = pd.read_fwf(r'C:\Users\Ильдус\PycharmProjects\obzor_storonnih_bibliotek_python\Readme')

    # Отображение первых 5 строк данных
    print(data.head())

print('-----------------------------------------------------------------------')

class Numpy:
    arr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])  # Создаем массив
    sum = np.sum(arr)   # Суммируем его элементы
    flip = np.flip(arr) # Элементы массива в обратном порядке

    print(arr)
    print(sum)
    print(flip)

print('-----------------------------------------------------------------------')

class Matplotlib:
    x = [5, 4, 3, 2, 1]         # Задаем данные по осям
    y = [10, 20, 15, 25, 30]

    plt.plot(x, y)         # Построение линейного графика
    plt.xlabel('ось X')
    plt.ylabel('ось Y')
    plt.title('Пример линейного графика')
    plt.show()


class Pillow:
    image = Image.open(r'C:\Users\Ильдус\PycharmProjects\obzor_storonnih_bibliotek_python\auto.jpg')
    resized_image = image.resize((800, 600))  # изменение размера на 800 x 600 пикселей
    resized_image.save('resized_image.jpg')

    # image = Image.open(r'C:\Users\Ильдус\PycharmProjects\obzor_storonnih_bibliotek_python\auto.jpg')
    blurred_image = image.filter(ImageFilter.BLUR)  # применить эффекты
    blurred_image.save('blurred_image.jpg')

    # сохранить в другой формат
    # image = Image.open(r'C:\Users\Ильдус\PycharmProjects\obzor_storonnih_bibliotek_python\auto.jpg')
    image.save('converted_image.jpg')  # конвертация в формат JPEG
    image.save('converted_image.gif')  # конвертация в формат GIF